services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - ghostdbb:/var/lib/postgresql/data
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    command: >
      redis-server
      --appendonly yes
      --save "900 1"
      --save "300 10"
      --save "60 1000"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data

  kafka:
    image: apache/kafka:4.0.0
    ports:
      - "9093:9093"
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9093 --list || exit 1",
        ]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 1s

  ghost-message-init:
    image: apache/kafka:4.0.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["sh", "-c"]
    command: >
      "/opt/kafka/bin/kafka-topics.sh
      --create
      --bootstrap-server kafka:9093
      --topic ghost-message-events
      --partitions 1
      --replication-factor 1 || true"

  ghost-primary-backend:
    build: ./ghost-primary-backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - kafka
      - minio
    environment:
      DATABASE_URL: postgresql://postgres:mysecretpassword@postgres:5432/postgres
      REDIS_URL: redis://redis:6379
      KAFKA_BROKER: kafka:9092
      PORT: 3000

  ghost-message-service:
    build: ./ghost-message-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/health || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 10s

  ghost-message-worker:
    build: ./ghost-message-worker
    depends_on:
      kafka:
        condition: service_healthy
      ghost-message-service:
        condition: service_healthy
      ghost-message-init:
        condition: service_completed_successfully

volumes:
  ghostdbb:
